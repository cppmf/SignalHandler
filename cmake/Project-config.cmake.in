#[=====================================================================================================================[

    This module is based on Alex Reinking article: Building a Dual Shared and Static Library with CMake

    see https://alexreinking.com/blog/building-a-dual-shared-and-static-library-with-cmake.html

#]=====================================================================================================================]

cmake_minimum_required(VERSION 3.21)

set(package_known_comps static shared)
set(package_comp_static NO)
set(package_comp_shared NO)

foreach(package_comp IN LISTS ${CMAKE_FIND_PACKAGE_NAME}_FIND_COMPONENTS)
  if(package_comp IN_LIST package_known_comps)
    set(package_comp_${package_comp} YES)
  else()
    set(${CMAKE_FIND_PACKAGE_NAME}_NOT_FOUND_MESSAGE "${CMAKE_FIND_PACKAGE_NAME} does not recognize component `${package_comp}`.")
    set(${CMAKE_FIND_PACKAGE_NAME}_FOUND FALSE)
    return()
  endif()
endforeach()

if(package_comp_static AND package_comp_shared)
  set(${CMAKE_FIND_PACKAGE_NAME}_NOT_FOUND_MESSAGE "${CMAKE_FIND_PACKAGE_NAME} `static` and `shared` components are mutually exclusive.")
  set(${CMAKE_FIND_PACKAGE_NAME}_FOUND FALSE)
  return()
endif()

set(package_static_targets "${CMAKE_CURRENT_LIST_DIR}/${CMAKE_FIND_PACKAGE_NAME}-static-targets.cmake")
set(package_shared_targets "${CMAKE_CURRENT_LIST_DIR}/${CMAKE_FIND_PACKAGE_NAME}-shared-targets.cmake")

macro(load_package_target type)
  if(NOT EXISTS "${package_${type}_targets}")
    set(${CMAKE_FIND_PACKAGE_NAME}_NOT_FOUND_MESSAGE "${CMAKE_FIND_PACKAGE_NAME} `${type}` libraries were requested but not found.")
    set(${CMAKE_FIND_PACKAGE_NAME}_FOUND FALSE)
    return()
  endif()
  include("${package_${type}_targets}")
endmacro()

if(package_comp_static)
  load_package_target(static)
elseif(package_comp_shared)
  load_package_target(shared)
elseif(DEFINED ${CMAKE_FIND_PACKAGE_NAME}_SHARED_LIBS AND ${CMAKE_FIND_PACKAGE_NAME}_SHARED_LIBS)
  load_package_target(shared)
elseif(DEFINED ${CMAKE_FIND_PACKAGE_NAME}_SHARED_LIBS AND NOT ${CMAKE_FIND_PACKAGE_NAME}_SHARED_LIBS)
  load_package_target(static)
elseif(BUILD_SHARED_LIBS)
  if(EXISTS "${package_shared_targets}")
    load_package_target(shared)
  else()
    load_package_target(static)
  endif()
else()
  if(EXISTS "${package_static_targets}")
    load_package_target(static)
  else()
    load_package_target(shared)
  endif()
endif()
